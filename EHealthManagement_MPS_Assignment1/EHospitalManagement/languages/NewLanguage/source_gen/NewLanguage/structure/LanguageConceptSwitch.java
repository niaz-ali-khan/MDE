package NewLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int Attributes = 0;
  public static final int Boolean = 1;
  public static final int CommunicationInterface = 2;
  public static final int DatasetType = 3;
  public static final int Datatype = 4;
  public static final int Date = 5;
  public static final int DocumentType = 6;
  public static final int Entity = 7;
  public static final int EventMassageType = 8;
  public static final int FileMessage = 9;
  public static final int ImageMessage = 10;
  public static final int ImageUI = 11;
  public static final int Integer = 12;
  public static final int MassageExchangeStandard = 13;
  public static final int MessageType = 14;
  public static final int RepresentationInterface = 15;
  public static final int String = 16;
  public static final int TextMessage = 17;
  public static final int TextUI = 18;
  public static final int User = 19;
  public static final int UserInterface = 20;
  public static final int Varchar = 21;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0x59f9da20e62a4a82L, 0x8c2d8a77f06056f1L);
    builder.put(0x68bcf0507e012346L, Attributes);
    builder.put(0x68bcf0507dc9dd4aL, Boolean);
    builder.put(0x68bcf0507dca69c1L, CommunicationInterface);
    builder.put(0x68bcf0507dd0e525L, DatasetType);
    builder.put(0x68bcf0507dc8f001L, Datatype);
    builder.put(0x68bcf0507dc9e7daL, Date);
    builder.put(0x68bcf0507dd108a3L, DocumentType);
    builder.put(0x68bcf0507dc8f196L, Entity);
    builder.put(0x68bcf0507dca21beL, EventMassageType);
    builder.put(0x68bcf0507dd1af21L, FileMessage);
    builder.put(0x68bcf0507dd1a449L, ImageMessage);
    builder.put(0x68bcf0507dd35ac9L, ImageUI);
    builder.put(0x68bcf0507e01c3b1L, Integer);
    builder.put(0x68bcf0507dca19d9L, MassageExchangeStandard);
    builder.put(0x68bcf0507dd10befL, MessageType);
    builder.put(0x68bcf0507dd0e217L, RepresentationInterface);
    builder.put(0x68bcf0507dc9bfb5L, String);
    builder.put(0x68bcf0507dd18c27L, TextMessage);
    builder.put(0x68bcf0507dd38fcaL, TextUI);
    builder.put(0x68bcf0507dc9f241L, User);
    builder.put(0x68bcf0507dcb29b0L, UserInterface);
    builder.put(0x68bcf0507dc9e685L, Varchar);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
