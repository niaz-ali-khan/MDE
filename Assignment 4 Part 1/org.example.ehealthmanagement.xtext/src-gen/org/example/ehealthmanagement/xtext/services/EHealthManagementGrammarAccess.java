/*
 * generated by Xtext 2.21.0
 */
package org.example.ehealthmanagement.xtext.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractEnumRuleElementFinder;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class EHealthManagementGrammarAccess extends AbstractGrammarElementFinder {
	
	public class UserElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.example.ehealthmanagement.xtext.EHealthManagement.User");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cUserAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cUserKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cUserTypesKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cUserTypesAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cUserTypesAllowedUserTypesEnumRuleCall_3_1_0 = (RuleCall)cUserTypesAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//User:
		//	{User}
		//	'User'
		//	'{' ('UserTypes' UserTypes=AllowedUserTypes)?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{User} 'User' '{' ('UserTypes' UserTypes=AllowedUserTypes)? '}'
		public Group getGroup() { return cGroup; }
		
		//{User}
		public Action getUserAction_0() { return cUserAction_0; }
		
		//'User'
		public Keyword getUserKeyword_1() { return cUserKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('UserTypes' UserTypes=AllowedUserTypes)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'UserTypes'
		public Keyword getUserTypesKeyword_3_0() { return cUserTypesKeyword_3_0; }
		
		//UserTypes=AllowedUserTypes
		public Assignment getUserTypesAssignment_3_1() { return cUserTypesAssignment_3_1; }
		
		//AllowedUserTypes
		public RuleCall getUserTypesAllowedUserTypesEnumRuleCall_3_1_0() { return cUserTypesAllowedUserTypesEnumRuleCall_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class UserInterfaceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.example.ehealthmanagement.xtext.EHealthManagement.UserInterface");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cUserInterfaceAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cUserInterfaceKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cUserInterfacesKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cUserInterfacesAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cUserInterfacesAllowedUserInterfacesEnumRuleCall_3_1_0 = (RuleCall)cUserInterfacesAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//UserInterface:
		//	{UserInterface}
		//	'UserInterface'
		//	'{' ('UserInterfaces' UserInterfaces=AllowedUserInterfaces)?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{UserInterface} 'UserInterface' '{' ('UserInterfaces' UserInterfaces=AllowedUserInterfaces)? '}'
		public Group getGroup() { return cGroup; }
		
		//{UserInterface}
		public Action getUserInterfaceAction_0() { return cUserInterfaceAction_0; }
		
		//'UserInterface'
		public Keyword getUserInterfaceKeyword_1() { return cUserInterfaceKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('UserInterfaces' UserInterfaces=AllowedUserInterfaces)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'UserInterfaces'
		public Keyword getUserInterfacesKeyword_3_0() { return cUserInterfacesKeyword_3_0; }
		
		//UserInterfaces=AllowedUserInterfaces
		public Assignment getUserInterfacesAssignment_3_1() { return cUserInterfacesAssignment_3_1; }
		
		//AllowedUserInterfaces
		public RuleCall getUserInterfacesAllowedUserInterfacesEnumRuleCall_3_1_0() { return cUserInterfacesAllowedUserInterfacesEnumRuleCall_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class RepresentationInterfaceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.example.ehealthmanagement.xtext.EHealthManagement.RepresentationInterface");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cRepresentationInterfaceAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cRepresentationInterfaceKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cRepresentationInterfacesKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cRepresentationInterfacesAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cRepresentationInterfacesAllowedRepresentationInterfaceTypesEnumRuleCall_3_1_0 = (RuleCall)cRepresentationInterfacesAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//RepresentationInterface:
		//	{RepresentationInterface}
		//	'RepresentationInterface'
		//	'{' ('RepresentationInterfaces' RepresentationInterfaces=AllowedRepresentationInterfaceTypes)?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{RepresentationInterface} 'RepresentationInterface' '{' ('RepresentationInterfaces'
		//RepresentationInterfaces=AllowedRepresentationInterfaceTypes)? '}'
		public Group getGroup() { return cGroup; }
		
		//{RepresentationInterface}
		public Action getRepresentationInterfaceAction_0() { return cRepresentationInterfaceAction_0; }
		
		//'RepresentationInterface'
		public Keyword getRepresentationInterfaceKeyword_1() { return cRepresentationInterfaceKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('RepresentationInterfaces' RepresentationInterfaces=AllowedRepresentationInterfaceTypes)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'RepresentationInterfaces'
		public Keyword getRepresentationInterfacesKeyword_3_0() { return cRepresentationInterfacesKeyword_3_0; }
		
		//RepresentationInterfaces=AllowedRepresentationInterfaceTypes
		public Assignment getRepresentationInterfacesAssignment_3_1() { return cRepresentationInterfacesAssignment_3_1; }
		
		//AllowedRepresentationInterfaceTypes
		public RuleCall getRepresentationInterfacesAllowedRepresentationInterfaceTypesEnumRuleCall_3_1_0() { return cRepresentationInterfacesAllowedRepresentationInterfaceTypesEnumRuleCall_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class CommunicationInterfaceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.example.ehealthmanagement.xtext.EHealthManagement.CommunicationInterface");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCommunicationInterfaceAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cCommunicationInterfaceKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommunicationInterfacesKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cCommunicationInterfacesAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cCommunicationInterfacesAllowedCommunicationInterfaceTypesEnumRuleCall_3_1_0 = (RuleCall)cCommunicationInterfacesAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//CommunicationInterface:
		//	{CommunicationInterface}
		//	'CommunicationInterface'
		//	'{' ('CommunicationInterfaces' CommunicationInterfaces=AllowedCommunicationInterfaceTypes)?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{CommunicationInterface} 'CommunicationInterface' '{' ('CommunicationInterfaces'
		//CommunicationInterfaces=AllowedCommunicationInterfaceTypes)? '}'
		public Group getGroup() { return cGroup; }
		
		//{CommunicationInterface}
		public Action getCommunicationInterfaceAction_0() { return cCommunicationInterfaceAction_0; }
		
		//'CommunicationInterface'
		public Keyword getCommunicationInterfaceKeyword_1() { return cCommunicationInterfaceKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('CommunicationInterfaces' CommunicationInterfaces=AllowedCommunicationInterfaceTypes)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'CommunicationInterfaces'
		public Keyword getCommunicationInterfacesKeyword_3_0() { return cCommunicationInterfacesKeyword_3_0; }
		
		//CommunicationInterfaces=AllowedCommunicationInterfaceTypes
		public Assignment getCommunicationInterfacesAssignment_3_1() { return cCommunicationInterfacesAssignment_3_1; }
		
		//AllowedCommunicationInterfaceTypes
		public RuleCall getCommunicationInterfacesAllowedCommunicationInterfaceTypesEnumRuleCall_3_1_0() { return cCommunicationInterfacesAllowedCommunicationInterfaceTypesEnumRuleCall_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	
	public class AllowedUserTypesElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.example.ehealthmanagement.xtext.EHealthManagement.AllowedUserTypes");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cDoctorEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cDoctorDoctorKeyword_0_0 = (Keyword)cDoctorEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cPatientEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cPatientPatientKeyword_1_0 = (Keyword)cPatientEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cSystemAdminEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cSystemAdminSystemAdminKeyword_2_0 = (Keyword)cSystemAdminEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum AllowedUserTypes:
		//	Doctor | Patient | SystemAdmin;
		public EnumRule getRule() { return rule; }
		
		//Doctor | Patient | SystemAdmin
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Doctor
		public EnumLiteralDeclaration getDoctorEnumLiteralDeclaration_0() { return cDoctorEnumLiteralDeclaration_0; }
		
		//'Doctor'
		public Keyword getDoctorDoctorKeyword_0_0() { return cDoctorDoctorKeyword_0_0; }
		
		//Patient
		public EnumLiteralDeclaration getPatientEnumLiteralDeclaration_1() { return cPatientEnumLiteralDeclaration_1; }
		
		//'Patient'
		public Keyword getPatientPatientKeyword_1_0() { return cPatientPatientKeyword_1_0; }
		
		//SystemAdmin
		public EnumLiteralDeclaration getSystemAdminEnumLiteralDeclaration_2() { return cSystemAdminEnumLiteralDeclaration_2; }
		
		//'SystemAdmin'
		public Keyword getSystemAdminSystemAdminKeyword_2_0() { return cSystemAdminSystemAdminKeyword_2_0; }
	}
	public class AllowedUserInterfacesElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.example.ehealthmanagement.xtext.EHealthManagement.AllowedUserInterfaces");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cProfileViewEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cProfileViewProfileViewKeyword_0_0 = (Keyword)cProfileViewEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cInformationViewEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cInformationViewInformationViewKeyword_1_0 = (Keyword)cInformationViewEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum AllowedUserInterfaces:
		//	ProfileView | InformationView;
		public EnumRule getRule() { return rule; }
		
		//ProfileView | InformationView
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ProfileView
		public EnumLiteralDeclaration getProfileViewEnumLiteralDeclaration_0() { return cProfileViewEnumLiteralDeclaration_0; }
		
		//'ProfileView'
		public Keyword getProfileViewProfileViewKeyword_0_0() { return cProfileViewProfileViewKeyword_0_0; }
		
		//InformationView
		public EnumLiteralDeclaration getInformationViewEnumLiteralDeclaration_1() { return cInformationViewEnumLiteralDeclaration_1; }
		
		//'InformationView'
		public Keyword getInformationViewInformationViewKeyword_1_0() { return cInformationViewInformationViewKeyword_1_0; }
	}
	public class AllowedRepresentationInterfaceTypesElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.example.ehealthmanagement.xtext.EHealthManagement.AllowedRepresentationInterfaceTypes");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cDoctorProfileEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cDoctorProfileDoctorProfileKeyword_0_0 = (Keyword)cDoctorProfileEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cPatientProfileEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cPatientProfilePatientProfileKeyword_1_0 = (Keyword)cPatientProfileEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cMedicineListEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cMedicineListMedicineListKeyword_2_0 = (Keyword)cMedicineListEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cPrescriptionViewEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cPrescriptionViewPrescriptionViewKeyword_3_0 = (Keyword)cPrescriptionViewEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cDiagnosysViewEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cDiagnosysViewDiagnosysViewKeyword_4_0 = (Keyword)cDiagnosysViewEnumLiteralDeclaration_4.eContents().get(0);
		
		//enum AllowedRepresentationInterfaceTypes:
		//	DoctorProfile | PatientProfile | MedicineList | PrescriptionView | DiagnosysView;
		public EnumRule getRule() { return rule; }
		
		//DoctorProfile | PatientProfile | MedicineList | PrescriptionView | DiagnosysView
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//DoctorProfile
		public EnumLiteralDeclaration getDoctorProfileEnumLiteralDeclaration_0() { return cDoctorProfileEnumLiteralDeclaration_0; }
		
		//'DoctorProfile'
		public Keyword getDoctorProfileDoctorProfileKeyword_0_0() { return cDoctorProfileDoctorProfileKeyword_0_0; }
		
		//PatientProfile
		public EnumLiteralDeclaration getPatientProfileEnumLiteralDeclaration_1() { return cPatientProfileEnumLiteralDeclaration_1; }
		
		//'PatientProfile'
		public Keyword getPatientProfilePatientProfileKeyword_1_0() { return cPatientProfilePatientProfileKeyword_1_0; }
		
		//MedicineList
		public EnumLiteralDeclaration getMedicineListEnumLiteralDeclaration_2() { return cMedicineListEnumLiteralDeclaration_2; }
		
		//'MedicineList'
		public Keyword getMedicineListMedicineListKeyword_2_0() { return cMedicineListMedicineListKeyword_2_0; }
		
		//PrescriptionView
		public EnumLiteralDeclaration getPrescriptionViewEnumLiteralDeclaration_3() { return cPrescriptionViewEnumLiteralDeclaration_3; }
		
		//'PrescriptionView'
		public Keyword getPrescriptionViewPrescriptionViewKeyword_3_0() { return cPrescriptionViewPrescriptionViewKeyword_3_0; }
		
		//DiagnosysView
		public EnumLiteralDeclaration getDiagnosysViewEnumLiteralDeclaration_4() { return cDiagnosysViewEnumLiteralDeclaration_4; }
		
		//'DiagnosysView'
		public Keyword getDiagnosysViewDiagnosysViewKeyword_4_0() { return cDiagnosysViewDiagnosysViewKeyword_4_0; }
	}
	public class AllowedCommunicationInterfaceTypesElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.example.ehealthmanagement.xtext.EHealthManagement.AllowedCommunicationInterfaceTypes");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cCommunicationViewEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cCommunicationViewCommunicationViewKeyword_0_0 = (Keyword)cCommunicationViewEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cNotificationViewEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cNotificationViewNotificationViewKeyword_1_0 = (Keyword)cNotificationViewEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cFeedbackViewEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cFeedbackViewFeedbackViewKeyword_2_0 = (Keyword)cFeedbackViewEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum AllowedCommunicationInterfaceTypes:
		//	CommunicationView | NotificationView | FeedbackView;
		public EnumRule getRule() { return rule; }
		
		//CommunicationView | NotificationView | FeedbackView
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//CommunicationView
		public EnumLiteralDeclaration getCommunicationViewEnumLiteralDeclaration_0() { return cCommunicationViewEnumLiteralDeclaration_0; }
		
		//'CommunicationView'
		public Keyword getCommunicationViewCommunicationViewKeyword_0_0() { return cCommunicationViewCommunicationViewKeyword_0_0; }
		
		//NotificationView
		public EnumLiteralDeclaration getNotificationViewEnumLiteralDeclaration_1() { return cNotificationViewEnumLiteralDeclaration_1; }
		
		//'NotificationView'
		public Keyword getNotificationViewNotificationViewKeyword_1_0() { return cNotificationViewNotificationViewKeyword_1_0; }
		
		//FeedbackView
		public EnumLiteralDeclaration getFeedbackViewEnumLiteralDeclaration_2() { return cFeedbackViewEnumLiteralDeclaration_2; }
		
		//'FeedbackView'
		public Keyword getFeedbackViewFeedbackViewKeyword_2_0() { return cFeedbackViewFeedbackViewKeyword_2_0; }
	}
	
	private final UserElements pUser;
	private final UserInterfaceElements pUserInterface;
	private final RepresentationInterfaceElements pRepresentationInterface;
	private final CommunicationInterfaceElements pCommunicationInterface;
	private final AllowedUserTypesElements eAllowedUserTypes;
	private final AllowedUserInterfacesElements eAllowedUserInterfaces;
	private final AllowedRepresentationInterfaceTypesElements eAllowedRepresentationInterfaceTypes;
	private final AllowedCommunicationInterfaceTypesElements eAllowedCommunicationInterfaceTypes;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public EHealthManagementGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pUser = new UserElements();
		this.pUserInterface = new UserInterfaceElements();
		this.pRepresentationInterface = new RepresentationInterfaceElements();
		this.pCommunicationInterface = new CommunicationInterfaceElements();
		this.eAllowedUserTypes = new AllowedUserTypesElements();
		this.eAllowedUserInterfaces = new AllowedUserInterfacesElements();
		this.eAllowedRepresentationInterfaceTypes = new AllowedRepresentationInterfaceTypesElements();
		this.eAllowedCommunicationInterfaceTypes = new AllowedCommunicationInterfaceTypesElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.example.ehealthmanagement.xtext.EHealthManagement".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//User:
	//	{User}
	//	'User'
	//	'{' ('UserTypes' UserTypes=AllowedUserTypes)?
	//	'}';
	public UserElements getUserAccess() {
		return pUser;
	}
	
	public ParserRule getUserRule() {
		return getUserAccess().getRule();
	}
	
	//UserInterface:
	//	{UserInterface}
	//	'UserInterface'
	//	'{' ('UserInterfaces' UserInterfaces=AllowedUserInterfaces)?
	//	'}';
	public UserInterfaceElements getUserInterfaceAccess() {
		return pUserInterface;
	}
	
	public ParserRule getUserInterfaceRule() {
		return getUserInterfaceAccess().getRule();
	}
	
	//RepresentationInterface:
	//	{RepresentationInterface}
	//	'RepresentationInterface'
	//	'{' ('RepresentationInterfaces' RepresentationInterfaces=AllowedRepresentationInterfaceTypes)?
	//	'}';
	public RepresentationInterfaceElements getRepresentationInterfaceAccess() {
		return pRepresentationInterface;
	}
	
	public ParserRule getRepresentationInterfaceRule() {
		return getRepresentationInterfaceAccess().getRule();
	}
	
	//CommunicationInterface:
	//	{CommunicationInterface}
	//	'CommunicationInterface'
	//	'{' ('CommunicationInterfaces' CommunicationInterfaces=AllowedCommunicationInterfaceTypes)?
	//	'}';
	public CommunicationInterfaceElements getCommunicationInterfaceAccess() {
		return pCommunicationInterface;
	}
	
	public ParserRule getCommunicationInterfaceRule() {
		return getCommunicationInterfaceAccess().getRule();
	}
	
	//enum AllowedUserTypes:
	//	Doctor | Patient | SystemAdmin;
	public AllowedUserTypesElements getAllowedUserTypesAccess() {
		return eAllowedUserTypes;
	}
	
	public EnumRule getAllowedUserTypesRule() {
		return getAllowedUserTypesAccess().getRule();
	}
	
	//enum AllowedUserInterfaces:
	//	ProfileView | InformationView;
	public AllowedUserInterfacesElements getAllowedUserInterfacesAccess() {
		return eAllowedUserInterfaces;
	}
	
	public EnumRule getAllowedUserInterfacesRule() {
		return getAllowedUserInterfacesAccess().getRule();
	}
	
	//enum AllowedRepresentationInterfaceTypes:
	//	DoctorProfile | PatientProfile | MedicineList | PrescriptionView | DiagnosysView;
	public AllowedRepresentationInterfaceTypesElements getAllowedRepresentationInterfaceTypesAccess() {
		return eAllowedRepresentationInterfaceTypes;
	}
	
	public EnumRule getAllowedRepresentationInterfaceTypesRule() {
		return getAllowedRepresentationInterfaceTypesAccess().getRule();
	}
	
	//enum AllowedCommunicationInterfaceTypes:
	//	CommunicationView | NotificationView | FeedbackView;
	public AllowedCommunicationInterfaceTypesElements getAllowedCommunicationInterfaceTypesAccess() {
		return eAllowedCommunicationInterfaceTypes;
	}
	
	public EnumRule getAllowedCommunicationInterfaceTypesRule() {
		return getAllowedCommunicationInterfaceTypesAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' | "'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
